<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.json.observer">

  <!--极光推送-->
  <permission
      android:name="${applicationId}.permission.JPUSH_MESSAGE"
      android:protectionLevel="signature"></permission>
  <!-- Required -->
  <uses-permission android:name="${applicationId}.permission.JPUSH_MESSAGE"/>
  <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT"/>
  <uses-permission android:name="android.permission.INTERNET"/>
  <uses-permission android:name="android.permission.WAKE_LOCK"/>
  <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
  <uses-permission android:name="android.permission.VIBRATE"/>
  <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
  <uses-permission android:name="android.permission.WRITE_SETTINGS"/>


  <!-- 解决Android L上通知显示异常问题，targetSdkVersion需要设置成22 -->
  <uses-sdk
      android:minSdkVersion="9"
      android:targetSdkVersion="22"/>

  <!-- 个推SDK权限配置开始 -->
  <uses-permission android:name="android.permission.INTERNET"/>
  <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
  <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
  <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
  <uses-permission android:name="android.permission.WAKE_LOCK"/>
  <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
  <uses-permission android:name="android.permission.VIBRATE"/>
  <uses-permission android:name="android.permission.GET_TASKS"/>
  <!-- 支持iBeancon 需要蓝牙权限 -->
  <uses-permission android:name="android.permission.BLUETOOTH"/>
  <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
  <!-- 支持个推3.0 电子围栏功能 -->
  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
  <!-- 浮动通知权限 -->
  <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
  <!-- 自定义权限 -->
  <uses-permission android:name="getui.permission.GetuiService.com.json.observer"/>

  <permission
      android:name="getui.permission.GetuiService.com.json.observer"
      android:protectionLevel="normal">
  </permission>

  <!-- 个推SDK权限配置结束 -->

  <application
      android:name=".application.base.BaseApplication"
      android:allowBackup="true"
      android:icon="@mipmap/ic_launcher"
      android:label="@string/app_name"
      android:supportsRtl="true"
      android:theme="@style/AppTheme">
    <activity android:name=".application.activity.homeActivity.HomeActivity">
      <intent-filter>
        <action android:name="android.intent.action.MAIN"></action>
        <category android:name="android.intent.category.LAUNCHER"></category>
      </intent-filter>
    </activity>

    <activity android:name=".application.activity.productActivity.ProductDetailActivity">
    </activity>

    <!--极光推送start-->
    <!-- Required SDK核心功能-->
    <activity
        android:name="cn.jpush.android.ui.PushActivity"
        android:configChanges="orientation|keyboardHidden"
        android:exported="false"
        android:theme="@android:style/Theme.NoTitleBar">
      <intent-filter>
        <action android:name="cn.jpush.android.ui.PushActivity"/>

        <category android:name="android.intent.category.DEFAULT"/>
        <category android:name="${applicationId}"/>
      </intent-filter>
    </activity>
    <!--微信开放平台接入start-->
    <activity
        android:name=".wxapi.WXEntryActivity"
        android:exported="true"
        android:theme="@android:style/Theme.NoTitleBar">
    </activity>
    <!--微信开放平台接入end-->
    <!-- Required SDK核心功能-->
    <service
        android:name="cn.jpush.android.service.DownloadService"
        android:enabled="true"
        android:exported="false">
    </service>

    <!-- Required SDK 核心功能-->
    <!-- option since 2.0.5 可配置PushService，DaemonService,PushReceiver,AlarmReceiver的android:process参数 将JPush相关组件设置为一个独立进程 -->
    <!-- 如：android:process=":remote" -->
    <service
        android:name="cn.jpush.android.service.PushService"
        android:enabled="true"
        android:exported="false">
      <intent-filter>
        <action android:name="cn.jpush.android.intent.REGISTER"/>
        <action android:name="cn.jpush.android.intent.REPORT"/>
        <action android:name="cn.jpush.android.intent.PushService"/>
        <action android:name="cn.jpush.android.intent.PUSH_TIME"/>

      </intent-filter>
    </service>

    <!-- Required SDK 核心功能 since 1.8.0 -->
    <service
        android:name="cn.jpush.android.service.DaemonService"
        android:enabled="true"
        android:exported="true">
      <intent-filter>
        <action android:name="cn.jpush.android.intent.DaemonService"/>
        <category android:name="${applicationId}"/>
      </intent-filter>
    </service>

    <!-- Required SDK核心功能-->
    <receiver
        android:name="cn.jpush.android.service.PushReceiver"
        android:enabled="true"
        android:exported="false">
      <intent-filter android:priority="1000">
        <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY"/>
        <!--Required 显示通知栏 -->
        <category android:name="${applicationId}"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.USER_PRESENT"/>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
      </intent-filter>
      <!-- Optional -->
      <intent-filter>
        <action android:name="android.intent.action.PACKAGE_ADDED"/>
        <action android:name="android.intent.action.PACKAGE_REMOVED"/>

        <data android:scheme="package"/>
      </intent-filter>
    </receiver>

    <!-- Required SDK核心功能-->
    <receiver android:name="cn.jpush.android.service.AlarmReceiver"/>

    <!-- User defined. 用户自定义的广播接收器-->
    <receiver
        android:name="com.json.observer.application.broadcastReceiver.JPushReceiver"
        android:enabled="true">
      <intent-filter>
        <action android:name="cn.jpush.android.intent.REGISTRATION"/>
        <!--Required 用户注册SDK的intent-->
        <action android:name="cn.jpush.android.intent.UNREGISTRATION"/>
        <action android:name="cn.jpush.android.intent.MESSAGE_RECEIVED"/>
        <!--Required 用户接收SDK消息的intent-->
        <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED"/>
        <!--Required 用户接收SDK通知栏信息的intent-->
        <action android:name="cn.jpush.android.intent.NOTIFICATION_OPENED"/>
        <!--Required 用户打开自定义通知栏的intent-->
        <action android:name="cn.jpush.android.intent.ACTION_RICHPUSH_CALLBACK"/>
        <!--Optional 用户接受Rich Push Javascript 回调函数的intent-->
        <action android:name="cn.jpush.android.intent.CONNECTION"/>
        <!-- 接收网络变化 连接/断开 since 1.6.3 -->
        <category android:name="${applicationId}"/>
      </intent-filter>
    </receiver>

    <!-- Required . Enable it you can get statistics data with channel -->
    <meta-data
        android:name="JPUSH_CHANNEL"
        android:value="developer-default"/>
    <meta-data
        android:name="JPUSH_APPKEY"
        android:value="7bc72ac991cc6ae05c9feb48"/>
    <!-- </>值来自开发者平台取得的AppKey-->
    <!--极光推送end-->


    <!-- 个推SDK配置开始 -->
    <!-- 配置的第三方参数属性 -->
    <meta-data
        android:name="PUSH_APPID"
        android:value="KtXj4CtnDy8Db5ROzogX8A"/>
    <meta-data
        android:name="PUSH_APPKEY"
        android:value="你的APPKEY"/>
    <meta-data
        android:name="PUSH_APPSECRET"
        android:value="你的APPSECRET"/>

    <!-- 配置第三方Receiver(user自定义) -->
    <!-- APPID需要替换为相应的个推应用ID -->
    <receiver
        android:name="com.json.observer.application.broadcastReceiver.GetuiPushReceiver"
        android:exported="false">
      <intent-filter>
        <action android:name="com.igexin.sdk.action.KtXj4CtnDy8Db5ROzogX8A"/>
      </intent-filter>
    </receiver>

    <!-- 配置SDK核心服务 -->
    <service
        android:name="com.igexin.sdk.PushService"
        android:exported="true"
        android:label="NotificationCenter"
        android:process=":pushservice">
    </service>
    <service
        android:name="com.igexin.sdk.PushServiceUser"
        android:exported="true"
        android:label="NotificationCenterUser">
    </service>

    <receiver android:name="com.igexin.sdk.PushReceiver">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED"/>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
        <action android:name="android.intent.action.USER_PRESENT"/>
        <action android:name="com.igexin.sdk.action.refreshls"/>
        <!-- 以下三项为可选的action声明，可大大提高service存活率和消息到达速度 -->
        <action android:name="android.intent.action.MEDIA_MOUNTED"/>
        <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>
        <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED"/>
      </intent-filter>
    </receiver>
    <receiver
        android:name="com.igexin.sdk.PushManagerReceiver"
        android:exported="false">
      <intent-filter>
        <action android:name="com.igexin.sdk.action.pushmanager"/>
      </intent-filter>
    </receiver>

    <activity
        android:name="com.igexin.sdk.PushActivity"
        android:excludeFromRecents="true"
        android:exported="false"
        android:process=":pushservice"
        android:taskAffinity="com.igexin.sdk.PushActivityTask"
        android:theme="@android:style/Theme.Translucent.NoTitleBar">
    </activity>

    <service
        android:name="com.igexin.download.DownloadService"
        android:process=":pushservice"/>

    <receiver android:name="com.igexin.download.DownloadReceiver">
      <intent-filter>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
      </intent-filter>
    </receiver>

    <provider
        android:name="com.igexin.download.DownloadProvider"
        android:authorities="downloads.com.json.observer"
        android:exported="true"
        android:process=":pushservice"/>

    <activity
        android:name="com.igexin.getuiext.activity.GetuiExtActivity"
        android:configChanges="orientation|keyboard|keyboardHidden"
        android:excludeFromRecents="true"
        android:exported="false"
        android:process=":pushservice"
        android:taskAffinity="android.task.myServicetask"
        android:theme="@android:style/Theme.Translucent.NoTitleBar"/>


    <activity
        android:name="com.igexin.sdk.GActivity"
        android:excludeFromRecents="true"
        android:exported="true"
        android:process=":pushservice"
        android:taskAffinity="com.igexin.sdk.PushActivityTask"
        android:theme="@android:style/Theme.Translucent.NoTitleBar"/>


    <receiver
        android:name="com.igexin.getuiext.service.PayloadReceiver"
        android:exported="false">
      <intent-filter>
        <action android:name="com.igexin.sdk.action.7fjUl2Z3LH6xYy7NQK4ni4"/>
        <action android:name="com.igexin.sdk.action.KtXj4CtnDy8Db5ROzogX8A"/>
      </intent-filter>
    </receiver>

    <service
        android:name="com.igexin.getuiext.service.GetuiExtService"
        android:process=":pushservice"/>

    <!-- 个推SDK配置结束 -->
  </application>
</manifest>
